{"version":3,"sources":["components/header/Header.js","components/card/Card.js","components/mainContainer/MainContainer.js","App.js","index.js"],"names":["Header","activeFilter","changeActiveFilter","showFavorite","isFavorite","className","onClick","Card","ups","author","title","media","preview","comments","saveToDb","delFromDb","fromDb","useState","setIsFavorite","fontSize","color","preload","src","reddit_video","fallback_url","loop","autoPlay","images","resolutions","url","MainContainer","posts","setPosts","favoritePost","setFavoritePost","postType","setPostType","after","fetchDirection","setFetchDirection","indexDb","setIndexDb","useEffect","request","window","indexedDB","open","onerror","e","console","log","target","errorCode","onupgradeneeded","result","createObjectStore","autoIncrement","onsuccess","addFavorite","post","transaction","objectStore","add","oncomplete","delFromFavorite","req","openCursor","event","cursor","value","delete","continue","alert","getQueryParams","queryParams","queryString","limit","raw_json","fetchCats","a","isNext","queryParam","fetchURL","axios","response","postWithMediaContent","data","children","filter","concat","type","allPosts","push","showFavorites","next","hasMore","loader","dataLength","length","map","card","id","num_comments","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae0ddfb.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.scss'\nimport {AiOutlineFire, GiPodiumWinner, GiSevenPointedStar, MdFavoriteBorder} from \"react-icons/all\";\n\nconst Header = ({activeFilter,changeActiveFilter,showFavorite,isFavorite}) => {\n\n    const handleFavorite = ()=>{\n        changeActiveFilter('favorite')\n        showFavorite()\n    }\n\n    return(\n        <div className='header-wrapper'>\n            <div className='header-container'>\n                <div className='header'>\n                    <div className={ activeFilter === 'hot' ? ('header-filter-active'):('header-filter')}\n                         onClick={()=>changeActiveFilter('hot')}>\n                        <AiOutlineFire className={ activeFilter === 'hot' ? ('activeFilter'):('defaultFilter')} />\n                        Hot\n                    </div>\n                    <div className={ activeFilter === 'new' ? ('header-filter-active'):('header-filter')}\n                         onClick={()=>changeActiveFilter('new')}>\n                        <GiSevenPointedStar className={ activeFilter === 'new' ? ('activeFilter'):('defaultFilter')}/>\n                        New\n                    </div>\n                    <div className={ activeFilter === 'top' ? ('header-filter-active'):('header-filter')}\n                         onClick={()=>changeActiveFilter('top')}>\n                        <GiPodiumWinner className={ activeFilter === 'top' ? ('activeFilter'):('defaultFilter')}/>\n                        Top\n                    </div>\n                    <div className={ activeFilter === 'favorite' ? ('header-filter-active'):('header-filter')}>\n                        <MdFavoriteBorder className={ activeFilter === 'favorite' ? ('activeFilter'):('defaultFilter')}\n                                          onClick={()=>handleFavorite()}/>\n                        Favorite\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport  default Header;\n","import React, {useState} from 'react'\nimport './Card.scss'\nimport {AiFillHeart, AiOutlineArrowDown, AiOutlineArrowUp, AiOutlineLike, FaRegCommentAlt} from \"react-icons/all\";\n\nconst Card = ({ups,author,title,media,preview,comments,saveToDb,delFromDb,fromDb}) => {\n\n    const [isFavorite, setIsFavorite] = useState(fromDb?(true):(false))\n\n    const handleChangeFavorite = ()=>{\n        if(isFavorite){\n                setIsFavorite(false)\n                delFromDb({ups,author,title,media,preview,comments,saveToDb,delFromDb})\n            return\n        }\n        setIsFavorite(true)\n        saveToDb({ups,author,title,media,preview,comments})\n    }\n\n    return(\n        <div className='card-wrapper'>\n            <div className='card-score'>\n                <AiOutlineArrowUp fontSize='1.5em' color='#b2b4b6'/>\n                {ups}\n                <AiOutlineArrowDown fontSize='1.5em' color='#b2b4b6'/>\n            </div>\n            <div className='card-content'>\n                <div className='card-author'>\n                    <span>Posted by {author}</span>\n                </div>\n                <div className='card-description'>\n                    {title}\n                </div>\n                <div className='card-img'>\n                    {media ? (\n                        <video\n                            preload=\"auto\"\n                            src={media.reddit_video?.fallback_url}\n                            loop\n                            autoPlay/>\n                    ):(\n                        <img\n                            src={preview?.images[0].resolutions[1].url}\n                        />\n                    )}\n                </div>\n                <div className='card-info'>\n                    <div className='card-comments'>\n                        <FaRegCommentAlt fontSize='1.6em' color='#b2b4b6'/>\n                        <span>{comments} Comments</span>\n                    </div>\n                    <div className={isFavorite?('card-like-active'):('card-like')} onClick={handleChangeFavorite}>\n                        <AiFillHeart className='likeImg' />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport  default Card;\n","import React, {useEffect, useState} from 'react'\nimport './MainContainer.scss'\nimport axios from \"axios\";\nimport Card from \"../card/Card\";\nimport Header from \"../header/Header\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nconst MainContainer = () => {\n    const [posts, setPosts] = useState([]);\n    const [favoritePost, setFavoritePost] = useState([])\n    const [isFavorite,setIsFavorite] = useState(false)\n    const [postType, setPostType] = useState('top');\n    const [fetchDirection, setFetchDirection] = useState({\n        after: null,\n    });\n    const [indexDb, setIndexDb] = useState('')\n\n    useEffect(()=>{\n\n        let request = window.indexedDB.open(\"favoritePost\", 1);\n        request.onerror = function(e) {\n            console.log('IndexDb error: ', e.target.errorCode)\n        };\n        request.onupgradeneeded = function(e) {\n            const db = e.target.result;\n            db.createObjectStore('favorites',{ autoIncrement: true })\n        };\n        request.onsuccess = function (e){\n            setIndexDb(e.target.result)\n        }\n\n    })\n\n    const addFavorite = (post) =>{\n        let transaction = indexDb.transaction('favorites','readwrite')\n        let objectStore = transaction.objectStore('favorites')\n        objectStore.add(post)\n        transaction.oncomplete = function (e){\n            console.log('Success save')\n        }\n        transaction.onerror = function(e){\n            console.log('ERROR save', e.target.errorCode)\n        }\n    }\n\n    const delFromFavorite = (post) =>{\n        if (indexDb) {\n            let tx = indexDb.transaction(['favorites'], 'readwrite');\n            let store = tx.objectStore('favorites');\n            let req = store.openCursor();\n            req.onsuccess = (event) => {\n                let cursor = event.target.result;\n                if (cursor !== null) {\n                    console.log('cursor!',cursor)\n                    if(cursor.value.title === post.title){\n                        let del = cursor.delete()\n                        del.onsuccess = function (){\n                            console.log('delete success')\n                        }\n                    }\n                    cursor.continue();\n                }\n            };\n            req.onerror = (event) => {\n                alert(`error in cursor request ${event.target.errorCode}`);\n            };\n        }\n\n    }\n\n    const showFavorites = () => {\n        let allPosts = [];\n        if (indexDb) {\n            let tx = indexDb.transaction(['favorites'], 'readonly');\n            let store = tx.objectStore('favorites');\n            let req = store.openCursor();\n            req.onsuccess = (event) => {\n                let cursor = event.target.result;\n                console.log('cursor',cursor)\n                if (cursor != null) {\n                    allPosts.push(cursor.value);\n                    cursor.continue();\n                } else {\n                    setFavoritePost(allPosts)\n                }\n            };\n            req.onerror = (event) => {\n                alert(`error in cursor request ${event.target.errorCode}`);\n            };\n        }\n\n        setFavoritePost(allPosts);\n    };\n\n    const getQueryParams = (queryParams) => {\n        let queryString\n        if(queryParams !== null){\n           queryString = `limit=${queryParams.limit}&raw_json=${queryParams.raw_json}`\n            console.log('AFTER',queryParams.after)\n            if(queryParams.after !== null){\n                queryString+=`&after=${queryParams.after}`\n            }\n\n        }\n        return queryString\n\n    };\n\n    const fetchCats = async (isNext=true) => {\n        const queryParam = {\n            limit: 10,\n            raw_json: 1,\n            after: isNext ? fetchDirection.after : null,\n        };\n        const fetchURL = `https://www.reddit.com/r/cats/${postType}.json?&${getQueryParams(queryParam)}`;\n        const response = await axios(\n            fetchURL,\n        ) ?? [];\n\n        const postWithMediaContent = response?.data?.data?.children.filter(({ data }) => 'preview' in data);\n        setFetchDirection({\n            after: response?.data?.data?.after,\n        });\n\n        if(isNext){\n            setPosts(posts.concat(postWithMediaContent))\n        }else{\n            setPosts(postWithMediaContent);\n        }\n\n    };\n\n    useEffect(()=>{\n        if(postType !== 'favorite'){\n            fetchCats(false)\n        }\n\n    },[postType])\n\n    const handleChangePostType = (type)=>{\n        if(type !== 'favorite'){\n            setIsFavorite(false)\n        }\n        setPostType(type)\n    }\n\n    const handleShowFavorite = ()=>{\n        setIsFavorite(true)\n        showFavorites()\n    }\n\n    return(\n        <div className='mainContainer'>\n            <Header activeFilter={postType}\n                    changeActiveFilter={handleChangePostType}\n                    showFavorite={handleShowFavorite}\n                    isFavorite={isFavorite}/>\n            <InfiniteScroll className='infinity-scroll' next={fetchCats}\n                            hasMore={ isFavorite ? (false):(true)}\n                            loader={<h2>Loading...</h2>}\n                            dataLength={posts.length}\n                            >\n                {isFavorite ?\n                    (favoritePost.map((card)=>\n                    <Card key={card.id}\n                          ups = {card.ups}\n                          author={card.author}\n                          title={card.title}\n                          media={card?.media}\n                          preview={card?.preview}\n                          comments={card?.comments}\n                          saveToDb={addFavorite}\n                          delFromDb={delFromFavorite}\n                          fromDb={true}\n                    />))\n                    :\n                    (\n                        (posts.map((card)=>\n                            <Card key={card.data.id}\n                                  ups = {card.data?.ups}\n                                  author={card.data.author}\n                                  title={card.data.title}\n                                  media={card.data?.media}\n                                  preview={card.data?.preview}\n                                  comments={card.data?.num_comments}\n                                  saveToDb={addFavorite}\n                                  delFromDb={delFromFavorite}\n                                  fromDb={false}/>))\n                )}\n            </InfiniteScroll>\n        </div>\n    )\n}\nexport default MainContainer;\n","import './App.css';\nimport Header from \"./components/header/Header\";\nimport MainContainer from \"./components/mainContainer/MainContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}